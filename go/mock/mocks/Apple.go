// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Apple is an autogenerated mock type for the Apple type
type Apple struct {
	mock.Mock
}

// AppleSize provides a mock function with given fields: size
func (_m *Apple) AppleSize(size int) int {
	ret := _m.Called(size)

	if len(ret) == 0 {
		panic("no return value specified for AppleSize")
	}

	var r0 int
	if rf, ok := ret.Get(0).(func(int) int); ok {
		r0 = rf(size)
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// NewApple creates a new instance of Apple. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewApple(t interface {
	mock.TestingT
	Cleanup(func())
}) *Apple {
	mock := &Apple{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
